name: CI Build and Deploy to AWS ECS Blue-Green

on:
  push:
    branches:
      - main
    paths:
      - '**.cs'
      - '**.csproj'
      - 'Dockerfile'
  pull_request:
    branches:
      - main
    paths:
      - '**.cs'
      - '**.csproj'
      - 'Dockerfile'

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: ed-cicd-project
  CODEDEPLOY_APP: aspnetapp-deployment

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and Test via Dockerfile
        run: docker build -t aspnet-sample .

  deploy:
    name: Build, Push and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $(aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" --region $AWS_REGION --query 'repositories[0].repositoryUri' --output text | cut -d'/' -f1)

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Tag and Push image to ECR
        run: |
          IMAGE_URI=$(aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" --region $AWS_REGION --query 'repositories[0].repositoryUri' --output text)
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $IMAGE_URI:$IMAGE_TAG
          docker push $IMAGE_URI:$IMAGE_TAG
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}


      - name: Deploy new revision with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name $APPLICATION_NAME \
            --description "GitHub Actions Aspnetapp Deployment" \
            --file-exists-behavior OVERWRITE
